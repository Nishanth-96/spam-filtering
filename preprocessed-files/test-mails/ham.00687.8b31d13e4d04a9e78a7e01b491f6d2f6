chri said : > > i can tell you what the 'clear ' and 'del ' argument mean : > > mh_sequenceupd lists/l-k clear cur { } public > thi mean to clear the 'cur ' sequenc for lists/l-k > > mh_sequenceupd lists/l-k del unseen number public > thi mean to delet messag number from the 'unseen ' sequenc for lists/l-k > > can you explain more what you were actual do as thi occur ? thi > doe n't appear to be background process . is there signific to messag > number ? is it the one that is n't display ? > > chri after send the report i start fiddl with the ftoc_rescanlin stuff and i hav n't seen it sinc . i ca n't realli tell if it wa my hack that remov it , or if it wa some transit magic happen sinc thi wa the first invoc of that version of exmh . i 've back out my stuff now , and 'll let you know if it happen again . on anoth thing with the ftoc_rescanlin stuff . thi routin is call at time still unclar to me . an inspect of the routin suggest that it is use in the transit of a messag to/form '' current '' state to re-paint the ftoc line . howev , check the msg.tcl code ( msgchang ) we find : if { dollarmsgid ! = { } } { # allow null msgid from msg_showwhat , which suppli line instead if { dollarmsgid < number } return } els { # line null too , tri use first in folder if { [ string length dollarlin ] == number } { set line number } set msgid [ ftoc_msgnumb [ ftoc_findmsg dollarmsgid dollarlin ] ] } ftoc_clearcurr mh_setcur dollarexmh ( folder ) dollarmsgid ftoc_showsequ dollarexmh ( folder ) the ftoc_clearcurr call ftoc_rescanlin to clear the '+ ' sign _before_ the on-disk transit is made . i hack thi stuff and more or less chang the order . it work , but fail on some folder chang . my feel of thi is that we realli do not want to have a ftoc_clearcurr , but rather just a rescanlin and the caller had better know the line or msgid . that routin shoud just put in the '+ ' if the line/msg in question happen to be the cur msg . thought ? /ander _______________________________________________ exmh-work mail list emailaddr httpaddr
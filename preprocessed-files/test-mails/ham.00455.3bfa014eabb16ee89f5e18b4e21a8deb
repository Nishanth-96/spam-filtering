on mon , number aug number , vincent cunniff wrote : > the process list initi show a singl main process : > > number number.numb number.numb number number pts/number s number : number number : number ./heartbeatnumb > > when the client run , connect , and sleep for number second : > > number number.numb number.numb number number pts/number s number : number number : number ./heartbeatnumb > number number.numb number.numb number number pts/number s number : number number : number ./client > number number.numb number.numb number number pts/number s number : number number : number ./heartbeatnumb > number number.numb number.numb number number pts/number z number : number number : number [ heartbeatnumb > ] > > when the client exit , and the thread should finish , it doe n't : > > number number.numb number.numb number number pts/number s number : number number : number ./heartbeatnumb > number number.numb number.numb number number pts/number s number : number number : number ./heartbeatnumb > > thi second thread never goe away , but no more thread accumul , > and the total memori consumpt rise by about number-numbermb everi singl > time a client connect . > > c++ bug , linux bug , pthread bug , code error ? hmm ... with pthread there is alway one thread which act as a 'thread manag ' . do the number of process accumul ? or is it just that the # of thread is == # of thread you 're expect + number ? if the latter , ttbomk that is normal . ie , you dont creat the thread until the accept ( ) return . so up until then it a normal programm ( ie no thread manag ) . after that you will alway have +number process ( for the thread manag ) . also , the stack for further thread is alloc from the heap . ( see sigaltstack ( ) ) possibl glibc doe not brk ( ) back the space , just like malloc ( ) /free ( ) doe not alway releas the space to the heap again ( as most programm will alloc memori / thread again soonish anyway ) . > regard , > > vin regard , -- paul jakma emailaddr emailaddr key id : numberanumberffnumbera warn : do not ever send email to emailaddr fortun : the offici colorado state veget is now the `` state legisl '' . -- irish linux user ' group : emailaddr httpaddr for ( un ) subscript inform . list maintain : emailaddr
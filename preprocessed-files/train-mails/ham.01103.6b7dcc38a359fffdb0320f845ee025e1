gordon mohr wrote : > doe thi mean that elipt curv encrypt is > now easili breakabl ? or faster than befor with > no loss in strength ? or stronger ? > > raw bit are ok , cook bit are better . oh . ok. these result do n't help break ec crypto at all . with rsa , you pick a number with secret factor and to break the cryptosystem , you can factor the number . due to fast sub-exponenti algorithm for factor , the number had better be number bit at the veri least ( record = number bit ) . with ec , you pick a curv and pick point on the curv with secret discret logarithm . to break the cryptosystem you can comput a discret log but the best algorithm for random curv are exponenti ( record = number bit , for a slightli special curv ) . up until now , peopl pick curv chosen from a small fix set . one choic is a few curv with special properti that origin were chosen to make point-count easier , and can also speed up the crypto oper , but in some case they can also speed up attack , not on curv deploy at the moment but the danger exist . the other choic is to precomput a hand of random curv . the nsa did thi a few year ago when it took hour on a fast machin and nist standard those curv . what chang is that it is now possibl is to gener your own curv on an ordinari pc . thi ha been get easier and easier , with small curv take second on a fast machin sinc a year or two . now even reason big curv take second on a typic pc . thi mean that you do n't have to reli on standard curv but can distribut risk over mani curv in case some get broken at some stage . in certain circumst you can even keep the curv itself secret so an attack doe n't know which discret log to tri to comput ! there is n't realli a good analog with rsa , but imagin want to factor a number and you do n't even know what it is ... so basic recent progress ha made new thing feasibl and thi make them even more so . the underli primit for sign , encod and so on are not affect , but the secur vibe get better . r httpaddr
> interest . i 've alway wonder about thing 'consid ' to be bad . > exampl the goto , most languag support a goto of some sort , so are goto realli bad ? oh goodi . my final year project rear it head : - ) > is a loop or a recurs call actual ani better than a goto > or is the goto use as a kind of common enemi of > program syntax much as i would like to answer an unqualifi `` ye '' , i must admit : if you alreadi code in a style that make heavi use of goto , code in the same style with gosub or function call doe not improv code . much the same as when the manual on `` modular code '' said to write modul that would fit on a singl sheet of comput paper , lot of coder proceed to split their code into arbitrari number-lin chunk . : ) howev , `` go-to consid harm '' point out that to analys ( ==debug ) code , you need to be abl to tell what the point of execut is , and what the valu of the variabl are at that point . thi is an easi ( tm ) job if the code use assign , if ( ) , for ( ) and function , but not if it use goto . ( see httpaddr for the full letter ) . despit be one of dijkstra 's brain-damag children who learn basic at an earli age : ) i never use goto anymor ( or ani of it bastard offspr like break , continu , fudg function call with sleight of hand in the variabl ) . my code is longer than it might be if i had use goto at a critic , handi point . howev , code is a bit like network - you alway end up ad bit on where you did n't expect to - and the benefit is felt when anoth person ( like myself but in three month time ) is modifi or debug it and doe n't have to go through the hassl of deal with the impact of the goto . dave -- irish linux user ' group : emailaddr httpaddr for ( un ) subscript inform . list maintain : emailaddr